import { Card, CardContent } from "@/components/ui/card";
import { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from "@/components/ui/carousel";
import { ExternalLink, Quote, Star } from "lucide-react";
import { motion } from "framer-motion";
import { useCallback, useEffect, useRef, useState } from "react";
import type { EmblaCarouselType } from "embla-carousel";
import { SectionHeader } from "@/components/SectionHeader";

const TestimonialsSection = () => {
  const testimonials = [
   {
  "content": "Hi, I'm Ishita Pandey, a CSE (Data Science) student at Galgotias College. Thrilled to share that I've received an Analyst Trainee offer from DWAO! A huge shoutout to ZSkillUp for their unwavering supportâ€”your guidance, resources, and encouragement made all the difference. If you're prepping for placements, ZSkillUp is your go-to!",
  // "author": "Ishita Pandey",
  // "position": "Analyst Trainee, DWAO",
  "rating": 5,
  "linkedInUrl": "https://www.linkedin.com/feed/update/urn:li:activity:7231302427436572672"
},
{
  "content": "I am thrilled to have been selected as an Analyst Trainee at DWAO, and I owe a huge thanks to ZSkillUp for making this possible. ZSkillUp streamlined the entire hiring process and connected me with DWAO. The mock interviews and guidance provided by the team were invaluable in securing this opportunity.",
  // "author": "Utkarsh Singh",
  // "position": "Analyst Trainee, DWAO",
  "rating": 5,
  "linkedInUrl": "https://www.linkedin.com/feed/update/urn:li:activity:7228022503888105472"
}
  ];

  const [api, setApi] = useState<EmblaCarouselType | null>(null);
  const timerRef = useRef<number | null>(null);
  
  // Reference for testimonial content elements
  const testimonialContentsRef = useRef<HTMLDivElement[]>([]);

  const start = useCallback(() => {
    if (!api) return;
    stop();
    timerRef.current = window.setInterval(() => {
      if (!api) return;
      if (api.canScrollNext()) api.scrollNext();
      else api.scrollTo(0);
    }, 4000);
  }, [api]);

  const stop = useCallback(() => {
    if (timerRef.current) {
      window.clearInterval(timerRef.current);
      timerRef.current = null;
    }
  }, []);

  useEffect(() => {
    if (!api) return;
    start();
    return stop;
  }, [api, start, stop]);
  
  // Effect for equalizing card heights
  useEffect(() => {
    // Function to equalize the height of all testimonial cards
    const equalizeCardHeights = () => {
      // Get all testimonial content elements
      const contentElements = document.querySelectorAll('.testimonial-content');
      if (contentElements.length <= 1) return; // No need to equalize if there's only one card
      
      // Reset heights to auto to get natural heights
      contentElements.forEach(el => {
        (el as HTMLElement).style.height = 'auto';
      });
      
      // Find the tallest card
      let maxHeight = 0;
      contentElements.forEach(el => {
        maxHeight = Math.max(maxHeight, (el as HTMLElement).offsetHeight);
      });
      
      // Set all cards to the height of the tallest card
      contentElements.forEach(el => {
        (el as HTMLElement).style.height = `${maxHeight}px`;
      });
    };
    
    // Run on initial render and window resize
    equalizeCardHeights();
    window.addEventListener('resize', equalizeCardHeights);
    
    // Also run when the carousel slides change
    const handleCarouselChange = () => {
      // Small delay to ensure content has rendered properly
      setTimeout(equalizeCardHeights, 100);
    };
    
    if (api) {
      api.on('select', handleCarouselChange);
    }
    
    // Cleanup
    return () => {
      window.removeEventListener('resize', equalizeCardHeights);
      if (api) {
        api.off('select', handleCarouselChange);
      }
    };
  }, [api]);

  return (
    <section className="relative overflow-hidden py-16 bg-gradient-to-b from-muted/40 via-background to-muted/40">
      {/* subtle background textures */}
      <div className="pointer-events-none absolute inset-0 bg-[radial-gradient(circle_at_15%_20%,rgba(99,102,241,0.08),transparent_35%),radial-gradient(circle_at_85%_80%,rgba(236,72,153,0.08),transparent_35%)]" />
      <div className="container mx-auto px-6 relative z-10">
        <SectionHeader
          // eyebrow="Testimonials"
          title="Success Stories That Inspire"
          subtitle="Real experiences from students who launched their careers with our support"
          align="center"
        />

        <Carousel setApi={setApi} className="relative" onMouseEnter={stop} onMouseLeave={start}>
          <CarouselContent>
            {testimonials.map((testimonial, index) => (
              <CarouselItem key={index} className="md:basis-1/2 lg:basis-1/2 pt-4">
                <motion.div initial={{ opacity: 0, y: 16 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }}>
                  <Card className="shadow-card transition-smooth hover:shadow-elegant hover:-translate-y-2 relative h-full flex flex-col">
                    <div className="absolute -top-4 left-6">
                      <div className="w-8 h-8 bg-gradient-primary rounded-full flex items-center justify-center">
                        <Quote className="w-4 h-4 text-white" />
                      </div>
                    </div>
                    <CardContent className="pt-8 pb-6 flex-1 flex flex-col">
                      <div className="flex mb-4">
                        {[...Array(testimonial.rating)].map((_, i) => (
                          <Star key={i} className="w-5 h-5 text-yellow-400 fill-current" />
                        ))}
                      </div>
                      <div className="testimonial-content flex-1 flex flex-col">
                        <p className="text-muted-foreground leading-relaxed mb-6 italic flex-grow">
                          "{testimonial.content}"
                        </p>
                        {testimonial.linkedInUrl && (
                          <div className="mt-auto text-right">
                            <a 
                              href={testimonial.linkedInUrl} 
                              target="_blank" 
                              rel="noopener noreferrer"
                              className="text-blue-600 hover:text-blue-800 transition-colors inline-flex items-center gap-1 text-sm"
                            >
                              View on LinkedIn <ExternalLink className="w-3.5 h-3.5" />
                            </a>
                          </div>
                        )}
                      </div>
                    </CardContent>
                  </Card>
                </motion.div>
              </CarouselItem>
            ))}
          </CarouselContent>
          <CarouselPrevious className="-left-3" />
          <CarouselNext className="-right-3" />
        </Carousel>
      </div>
    </section>
  );
};

export default TestimonialsSection;
